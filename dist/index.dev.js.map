{"version":3,"sources":["index.js"],"names":["express","require","app","passport","port","process","env","PORT","cors","cookie","bcrypt","json","db","users","students","list","id","fname","surname","major","gpa","router","Router","jwt","use","origin","credentials","urlencoded","extended","post","req","res","next","authenticate","session","err","user","info","console","log","body","token","sign","SECRET","expiresIn","setHeader","serialize","httpOnly","secure","NODE_ENV","maxAge","sameSite","path","statusCode","status","get","message","send","route","newStudent","length","ID","findIndex","item","params","std_id","put","filter","SALT_ROUND","username","email","password","checkExistingUser","NOT_FOUND","hash","push","error","listen"],"mappings":"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","sourcesContent":["\nconst express = require('express'),\n    app = express(),\n    passport = require('passport'),\n    port = process.env.PORT || 80,\n    cors = require('cors'),\n    cookie = require('cookie')\n\nconst bcrypt = require('bcrypt')\nconst { json } = require('express')\n\nconst db = require('./database.js')\nlet users = db.users\n\nlet students = {\n    list: [\n        { id: 1, fname: \"Patomporn\", surname: \"Kaenchan\", major: \"CoE\", gpa: 3.0 }\n    ]\n}\n\nrequire('./passport.js')\n\nconst router = require('express').Router(),\n    jwt = require('jsonwebtoken')\n\napp.use('/api', router)\nrouter.use(cors({ origin: 'http://localhost:3000', credentials: true }))\n// router.use(cors())\nrouter.use(express.json())\nrouter.use(express.urlencoded({ extended: false }))\n\nrouter.post('/login', (req, res, next) => {\n    passport.authenticate('local', { session: false }, (err, user, info) => {\n        console.log('Login: ', req.body, user, err, info)\n        if (err) return next(err)\n        if (user) {\n            const token = jwt.sign(user, db.SECRET, {\n                expiresIn: '1d'\n            })\n            // req.cookie.token = token\n            res.setHeader(\n                \"Set-Cookie\",\n                cookie.serialize(\"token\", token, {\n                    httpOnly: true,\n                    secure: process.env.NODE_ENV !== \"development\",\n                    maxAge: 60 * 60,\n                    sameSite: \"strict\",\n                    path: \"/\",\n                })\n            );\n            res.statusCode = 200\n            return res.json({ user, token })\n        } else\n            return res.status(422).json(info)\n    })(req, res, next)\n})\n\nrouter.get('/logout', (req, res) => {\n    res.setHeader(\n        \"Set-Cookie\",\n        cookie.serialize(\"token\", '', {\n            httpOnly: true,\n            secure: process.env.NODE_ENV !== \"development\",\n            maxAge: -1,\n            sameSite: \"strict\",\n            path: \"/\",\n        })\n    );\n    res.statusCode = 200\n    return res.json({ message: 'Logout successful' })\n})\n\n/* GET user profile. */\nrouter.get('/profile',\n    passport.authenticate('jwt', { session: false }),\n    (req, res, next) => {\n        res.send(req.user)\n    });\n\n/* GET user foo. */\nrouter.get('/foo',\n    passport.authenticate('jwt', { session: false }),\n    (req, res, next) => {\n        return res.json({ message: 'foo' })\n    });\n\n\n    router.route('/students')\n    .get((req, res) => res.json(students))\n\n\nrouter.post('/students',\n    // passport.authenticate('jwt', { session: false }),\n    (req, res) => {\n        try {\n\n            let newStudent = {}\n            newStudent.id = (students.list.length) ? students.list[students.list.length - 1].id + 1 : 1\n            newStudent.fname = req.body.fname;\n            newStudent.surname = req.body.surname;\n            newStudent.major = req.body.major;\n            newStudent.gpa = req.body.gpa;\n\n            students = { \"list\": [...students.list, newStudent] }\n            res.json(students)\n        }\n        catch\n        {\n            res.json({ status: \"Add Fail\" })\n        }\n\n\n\n    })\n    router.route('/students/:std_id')\n    .get((req, res) => {\n\n        let ID = students.list.findIndex( item => (item.id === +req.params.std_id))\n        if(ID >= 0)\n        {\n            res.json(students.list[ID])\n        }\n        else\n        {\n            res.json({status: \"Student Error can't find!\"})\n        }\n\n    })\n\n    .put( (req,res) => { \n\n        let ID = students.list.findIndex( item => ( item.id === +req.params.std_id))\n        \n        if( ID >= 0)\n        {\n            students.list[ID].fname = req.body.fname\n            students.list[ID].surname = req.body.surname\n            students.list[ID].major = req.body.major\n            students.list[ID].gpa = req.body.gpa\n            \n            res.json(students)\n\n\n        }\n        else\n        {\n            res.json({status: \"Student Error can't find!\"})\n        }\n            \n    })\n\n    .delete((req, res) => {\n\n        let ID = students.list.findIndex( item => ( item.id === +req.params.std_id))\n\n        if(ID>=0)\n        {\n            students.list = students.list.filter( item => item.id !== +req.params.std_id)\n            res.json(students)\n        }\n        else\n        {\n            res.json({status: \"Student Error can't find!\"})\n        }\n\n    })\n\n\nrouter.post('/register',\n    async (req, res) => {\n        try {\n            const SALT_ROUND = 10\n            const { username, email, password } = req.body\n            if (!username || !email || !password)\n                return res.json({ message: \"Cannot register with empty string\" })\n            if (db.checkExistingUser(username) !== db.NOT_FOUND)\n                return res.json({ message: \"Duplicated user\" })\n\n            let id = (users.users.length) ? users.users[users.users.length - 1].id + 1 : 1\n            hash = await bcrypt.hash(password, SALT_ROUND)\n            users.users.push({ id, username, password: hash, email })\n            res.status(200).json({ message: \"Register success\" })\n        } catch {\n            res.status(422).json({ message: \"Cannot register\" })\n        }\n    })\n\nrouter.get('/alluser', (req, res) => res.json(db.users.users))\n\nrouter.get('/', (req, res, next) => {\n    res.send('Respond without authentication');\n});\n\n// Error Handler\napp.use((err, req, res, next) => {\n    let statusCode = err.status || 500\n    res.status(statusCode);\n    res.json({\n        error: {\n            status: statusCode,\n            message: err.message,\n        }\n    });\n});\n\n// Start Server\napp.listen(port, () => console.log(`Server is running on port ${port}`))\n\n"],"file":"index.dev.js"}